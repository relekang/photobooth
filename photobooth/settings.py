"""
Django settings for photobooth project.

Generated by 'django-admin startproject' using Django 1.9c1.

For more information on this file, see
https://docs.djangoproject.com/en/dev/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/dev/ref/settings/
"""
import json
import os

_secret = {}


def secret(key):
    if not _secret and os.environ.get('SECRETS_PATH'):
        with open(os.environ['SECRETS_PATH']) as f:
            _secret.update(json.load(f))
    return _secret.get(key)

DEBUG = secret('DEBUG')
if DEBUG is None:
    DEBUG = True

SECRET_KEY = secret('SECRET_KEY') or 'a9ge!f%w7d*x*9@@@a9022@xn^jh@u!u=&#emczfwjx86r705%'
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
SERVER_URL = secret('SERVER_URL') or 'http://booth.lkng.me'

CORS_ORIGIN_ALLOW_ALL = True

CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_ACCEPT_CONTENT = ['json']

BROKER_URL = secret('BROKER_URL') or 'redis://localhost:6379/5'


ALLOWED_HOSTS = ['.lkng.me']

INSTALLED_APPS = [
    'photobooth.gallery',

    'rest_framework',
    'corsheaders',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE_CLASSES = [
    'corsheaders.middleware.CorsMiddleware',
    'photobooth.middleware.DisableCSRF',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'photobooth.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'frontend', 'build')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'photobooth.wsgi.application'

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.' + (secret('DB_TYPE') or 'postgresql'),
        'NAME': secret('DB_NAME') or 'photobooth',
        'USER': secret('DB_USER'),
        'PASSWORD': secret('DB_PASSWORD')
    }
}

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'frontend/build/static')
]
MEDIA_URL = '/uploads/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'uploads')
